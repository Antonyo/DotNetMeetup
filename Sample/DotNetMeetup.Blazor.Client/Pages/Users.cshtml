@page  "/users/"
@inherits DotNetMeetup.Blazor.Client.PageBases.UsersBase

@if (!State.UsersLoaded)
{
    <p><em>Loading users...</em></p>
}
else
{
    <input bind="@searchFilter" placeholder="search" class="form-control my-2" ref="searchFilterField"/>
    <UserList Items="@FilteredUsers">
        @* If you are defining a template don't forget to include the tag (even empty) otherwise the page won't render *@
        <ActionTemplate>
            @*To access the templated parameter use 'context' object which strongly typed to the User object *@
            <button type="button" class="btn btn-warning" onclick="@(async e => await DeleteUserAsync(context))"><span class="oi oi-trash delete-button" aria-hidden="true"></span></button>
        </ActionTemplate>
    </UserList>
    <CreateUser CreateAction="@(async u => await State.AddUser(u))" />
}

@functions{

    ElementRef searchFilterField;

    string searchFilter = "";

    public IEnumerable<User> FilteredUsers => string.IsNullOrWhiteSpace(searchFilter) ? State.Users : State.Users.Where(x => x.Name.ToLowerInvariant().Contains(searchFilter.ToLowerInvariant()));

    protected override async Task OnAfterRenderAsync() => await JSRuntime.Current.InvokeAsync<object>("myFunctions.focusElement", searchFilterField);
}